#!/bin/bash

declare -A tmux_wrapper_envs
declare -a tmux_wrapper_env_names

declare -A tmux_wrapper_bind_titles
declare -A tmux_wrapper_bind_paths
declare -a tmux_wrapper_bind_names

tmux_wrapper_env(){
  tmux_wrapper_env_names[${#tmux_wrapper_env_names[@]}]=$1
  tmux_wrapper_envs[$1]=$2
}
tmux_wrapper_bind(){
  if [ -z "$tmux_wrapper_initial_window_name" ]; then
    tmux_wrapper_initial_window_name=$2
  fi
  if [ -z "$tmux_wrapper_initial_window_path" ]; then
    tmux_wrapper_initial_window_path=$3
  fi

  tmux_wrapper_bind_names[${#tmux_wrapper_bind_names[@]}]=$1
  tmux_wrapper_bind_titles[$1]=$2
  tmux_wrapper_bind_paths[$1]=$3
}

tmux_wrapper_main(){
  local conf_main
  local conf

  : ${tmux_wrapper_file:=~/.tmux.conf}
  : ${tmux_wrapper_work_path:=~/.tmux.wrapper}
  : ${tmux_wrapper_term:=xterm-256color}
  : ${tmux_wrapper_host:=localhost}
  : ${tmux_wrapper_shell:=bash}
  : ${tmux_wrapper_color:=green}

  if [ -z "$tmux_wrapper_session" ]; then
    tmux_wrapper_session="$(basename $0)"
  fi

  if [ -z "$tmux_wrapper_status_cmd" ]; then
    if [ "$tmux_wrapper_host" == localhost ]; then
      tmux_wrapper_status_cmd=uptime
    else
      tmux_wrapper_status_cmd="ssh $tmux_wrapper_host uptime"
    fi
    tmux_wrapper_status_cmd=$tmux_wrapper_status_cmd" | sed 's/.*load average: //'"
  fi

  if [ ! -d "$tmux_wrapper_work_path" ]; then
    mkdir -p "$tmux_wrapper_work_path"
  fi

  conf_main=$tmux_wrapper_work_path/$tmux_wrapper_session.conf
  conf=$conf_main.tmp
  if [ -f "$conf" ]; then
    echo "tmux_wrapper work in process"
    exit 1
  fi

  tmux_wrapper_build_conf

  mv -f $conf $conf_main

  tmux_wrapper_exec
}
tmux_wrapper_build_conf(){
  cat "$tmux_wrapper_file" > "$conf"
  echo >> "$conf"
  echo "# generated by tmux-wrapper" >> "$conf"
  echo >> "$conf"
  echo 'set -g default-terminal "'$tmux_wrapper_term'"' >> "$conf"
  echo 'set -ga terminal-overrides ",'$tmux_wrapper_term:Tc'"' >> "$conf"
  tmux_wrapper_build_status
  tmux_wrapper_build_env
  tmux_wrapper_build_bind
}
tmux_wrapper_build_status(){
  echo 'set -g status-left "#[fg='$tmux_wrapper_color']<'$tmux_wrapper_session'>"' >> "$conf"
  echo 'set -g status-right "#[fg='$tmux_wrapper_color'][#('$tmux_wrapper_status_cmd')]"' >> "$conf"
}
tmux_wrapper_build_env(){
  local env_name

  if [ ${#tmux_wrapper_env_names[@]} -gt 0 ]; then
    for env_name in ${tmux_wrapper_env_names[@]}; do
      echo "set-environment -g $env_name ${tmux_wrapper_envs[$env_name]}" >> "$conf"
    done
  fi
}
tmux_wrapper_build_bind(){
  local cmd
  local bind_name

  if [ "$tmux_wrapper_host" == localhost ]; then
    cmd="/bin/sh -c"
  else
    cmd="ssh $tmux_wrapper_host -t"
  fi

  if [ ${#tmux_wrapper_bind_names[@]} -gt 0 ]; then
    for bind_name in ${tmux_wrapper_bind_names[@]}; do
      echo bind $bind_name neww -n ${tmux_wrapper_bind_titles[$bind_name]} '"'$cmd' '"'cd ${tmux_wrapper_bind_paths[$bind_name]}; $tmux_wrapper_shell'"'"' >> "$conf"
    done
  fi
}
tmux_wrapper_exec(){
  local window
  local cmd

  tmux source-file "$conf_main" 2> /dev/null

  if tmux has -t "$tmux_wrapper_session" 2> /dev/null; then
    tmux -2 -u attach -t "$tmux_wrapper_session"
    return
  fi

  if [ "$tmux_wrapper_host" == localhost ]; then
    cmd=/bin/sh
  else
    cmd="ssh $tmux_wrapper_host"
  fi

  if [ -z "$tmux_wrapper_initial_window_name$tmux_wrapper_initial_window_path" ]; then
    window=$tmux_wrapper_shell
  else
    window=$tmux_wrapper_initial_window_name

    if [ "$tmux_wrapper_host" == localhost ]; then
      cmd="$cmd -c"
    else
      cmd="$cmd -t"
    fi
    cmd="$cmd 'cd $tmux_wrapper_initial_window_path; $tmux_wrapper_shell'"
  fi

  tmux -2 -u -f "$conf_main" new -s "$tmux_wrapper_session" -n "$window" "$cmd"
}
